/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.github.avro.vanilla.model;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Sample extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -5779327796327507822L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Sample\",\"namespace\":\"com.github.avro.vanilla.model\",\"fields\":[{\"name\":\"booleanValue\",\"type\":\"boolean\"},{\"name\":\"intValue\",\"type\":\"int\"},{\"name\":\"longValue\",\"type\":\"long\"},{\"name\":\"floatValue\",\"type\":\"float\"},{\"name\":\"doubleValue\",\"type\":\"double\"},{\"name\":\"bytesValue\",\"type\":\"bytes\"},{\"name\":\"stringValue\",\"type\":\"string\"},{\"name\":\"nullBoolean\",\"type\":[\"boolean\",\"null\"]},{\"name\":\"nullInt\",\"type\":[\"int\",\"null\"]},{\"name\":\"nullLong\",\"type\":[\"long\",\"null\"]},{\"name\":\"nullFloat\",\"type\":[\"float\",\"null\"]},{\"name\":\"nullDouble\",\"type\":[\"double\",\"null\"]},{\"name\":\"nullBytes\",\"type\":[\"bytes\",\"null\"]},{\"name\":\"nullString\",\"type\":[\"string\",\"null\"]},{\"name\":\"myLogicalShit\",\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":4,\"scale\":2}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Sample> ENCODER =
      new BinaryMessageEncoder<Sample>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Sample> DECODER =
      new BinaryMessageDecoder<Sample>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<Sample> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<Sample> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Sample>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this Sample to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a Sample from a ByteBuffer. */
  public static Sample fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public boolean booleanValue;
  @Deprecated public int intValue;
  @Deprecated public long longValue;
  @Deprecated public float floatValue;
  @Deprecated public double doubleValue;
  @Deprecated public java.nio.ByteBuffer bytesValue;
  @Deprecated public java.lang.CharSequence stringValue;
  @Deprecated public java.lang.Boolean nullBoolean;
  @Deprecated public java.lang.Integer nullInt;
  @Deprecated public java.lang.Long nullLong;
  @Deprecated public java.lang.Float nullFloat;
  @Deprecated public java.lang.Double nullDouble;
  @Deprecated public java.nio.ByteBuffer nullBytes;
  @Deprecated public java.lang.CharSequence nullString;
  @Deprecated public java.nio.ByteBuffer myLogicalShit;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Sample() {}

  /**
   * All-args constructor.
   * @param booleanValue The new value for booleanValue
   * @param intValue The new value for intValue
   * @param longValue The new value for longValue
   * @param floatValue The new value for floatValue
   * @param doubleValue The new value for doubleValue
   * @param bytesValue The new value for bytesValue
   * @param stringValue The new value for stringValue
   * @param nullBoolean The new value for nullBoolean
   * @param nullInt The new value for nullInt
   * @param nullLong The new value for nullLong
   * @param nullFloat The new value for nullFloat
   * @param nullDouble The new value for nullDouble
   * @param nullBytes The new value for nullBytes
   * @param nullString The new value for nullString
   * @param myLogicalShit The new value for myLogicalShit
   */
  public Sample(java.lang.Boolean booleanValue, java.lang.Integer intValue, java.lang.Long longValue, java.lang.Float floatValue, java.lang.Double doubleValue, java.nio.ByteBuffer bytesValue, java.lang.CharSequence stringValue, java.lang.Boolean nullBoolean, java.lang.Integer nullInt, java.lang.Long nullLong, java.lang.Float nullFloat, java.lang.Double nullDouble, java.nio.ByteBuffer nullBytes, java.lang.CharSequence nullString, java.nio.ByteBuffer myLogicalShit) {
    this.booleanValue = booleanValue;
    this.intValue = intValue;
    this.longValue = longValue;
    this.floatValue = floatValue;
    this.doubleValue = doubleValue;
    this.bytesValue = bytesValue;
    this.stringValue = stringValue;
    this.nullBoolean = nullBoolean;
    this.nullInt = nullInt;
    this.nullLong = nullLong;
    this.nullFloat = nullFloat;
    this.nullDouble = nullDouble;
    this.nullBytes = nullBytes;
    this.nullString = nullString;
    this.myLogicalShit = myLogicalShit;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return booleanValue;
    case 1: return intValue;
    case 2: return longValue;
    case 3: return floatValue;
    case 4: return doubleValue;
    case 5: return bytesValue;
    case 6: return stringValue;
    case 7: return nullBoolean;
    case 8: return nullInt;
    case 9: return nullLong;
    case 10: return nullFloat;
    case 11: return nullDouble;
    case 12: return nullBytes;
    case 13: return nullString;
    case 14: return myLogicalShit;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: booleanValue = (java.lang.Boolean)value$; break;
    case 1: intValue = (java.lang.Integer)value$; break;
    case 2: longValue = (java.lang.Long)value$; break;
    case 3: floatValue = (java.lang.Float)value$; break;
    case 4: doubleValue = (java.lang.Double)value$; break;
    case 5: bytesValue = (java.nio.ByteBuffer)value$; break;
    case 6: stringValue = (java.lang.CharSequence)value$; break;
    case 7: nullBoolean = (java.lang.Boolean)value$; break;
    case 8: nullInt = (java.lang.Integer)value$; break;
    case 9: nullLong = (java.lang.Long)value$; break;
    case 10: nullFloat = (java.lang.Float)value$; break;
    case 11: nullDouble = (java.lang.Double)value$; break;
    case 12: nullBytes = (java.nio.ByteBuffer)value$; break;
    case 13: nullString = (java.lang.CharSequence)value$; break;
    case 14: myLogicalShit = (java.nio.ByteBuffer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'booleanValue' field.
   * @return The value of the 'booleanValue' field.
   */
  public java.lang.Boolean getBooleanValue() {
    return booleanValue;
  }

  /**
   * Sets the value of the 'booleanValue' field.
   * @param value the value to set.
   */
  public void setBooleanValue(java.lang.Boolean value) {
    this.booleanValue = value;
  }

  /**
   * Gets the value of the 'intValue' field.
   * @return The value of the 'intValue' field.
   */
  public java.lang.Integer getIntValue() {
    return intValue;
  }

  /**
   * Sets the value of the 'intValue' field.
   * @param value the value to set.
   */
  public void setIntValue(java.lang.Integer value) {
    this.intValue = value;
  }

  /**
   * Gets the value of the 'longValue' field.
   * @return The value of the 'longValue' field.
   */
  public java.lang.Long getLongValue() {
    return longValue;
  }

  /**
   * Sets the value of the 'longValue' field.
   * @param value the value to set.
   */
  public void setLongValue(java.lang.Long value) {
    this.longValue = value;
  }

  /**
   * Gets the value of the 'floatValue' field.
   * @return The value of the 'floatValue' field.
   */
  public java.lang.Float getFloatValue() {
    return floatValue;
  }

  /**
   * Sets the value of the 'floatValue' field.
   * @param value the value to set.
   */
  public void setFloatValue(java.lang.Float value) {
    this.floatValue = value;
  }

  /**
   * Gets the value of the 'doubleValue' field.
   * @return The value of the 'doubleValue' field.
   */
  public java.lang.Double getDoubleValue() {
    return doubleValue;
  }

  /**
   * Sets the value of the 'doubleValue' field.
   * @param value the value to set.
   */
  public void setDoubleValue(java.lang.Double value) {
    this.doubleValue = value;
  }

  /**
   * Gets the value of the 'bytesValue' field.
   * @return The value of the 'bytesValue' field.
   */
  public java.nio.ByteBuffer getBytesValue() {
    return bytesValue;
  }

  /**
   * Sets the value of the 'bytesValue' field.
   * @param value the value to set.
   */
  public void setBytesValue(java.nio.ByteBuffer value) {
    this.bytesValue = value;
  }

  /**
   * Gets the value of the 'stringValue' field.
   * @return The value of the 'stringValue' field.
   */
  public java.lang.CharSequence getStringValue() {
    return stringValue;
  }

  /**
   * Sets the value of the 'stringValue' field.
   * @param value the value to set.
   */
  public void setStringValue(java.lang.CharSequence value) {
    this.stringValue = value;
  }

  /**
   * Gets the value of the 'nullBoolean' field.
   * @return The value of the 'nullBoolean' field.
   */
  public java.lang.Boolean getNullBoolean() {
    return nullBoolean;
  }

  /**
   * Sets the value of the 'nullBoolean' field.
   * @param value the value to set.
   */
  public void setNullBoolean(java.lang.Boolean value) {
    this.nullBoolean = value;
  }

  /**
   * Gets the value of the 'nullInt' field.
   * @return The value of the 'nullInt' field.
   */
  public java.lang.Integer getNullInt() {
    return nullInt;
  }

  /**
   * Sets the value of the 'nullInt' field.
   * @param value the value to set.
   */
  public void setNullInt(java.lang.Integer value) {
    this.nullInt = value;
  }

  /**
   * Gets the value of the 'nullLong' field.
   * @return The value of the 'nullLong' field.
   */
  public java.lang.Long getNullLong() {
    return nullLong;
  }

  /**
   * Sets the value of the 'nullLong' field.
   * @param value the value to set.
   */
  public void setNullLong(java.lang.Long value) {
    this.nullLong = value;
  }

  /**
   * Gets the value of the 'nullFloat' field.
   * @return The value of the 'nullFloat' field.
   */
  public java.lang.Float getNullFloat() {
    return nullFloat;
  }

  /**
   * Sets the value of the 'nullFloat' field.
   * @param value the value to set.
   */
  public void setNullFloat(java.lang.Float value) {
    this.nullFloat = value;
  }

  /**
   * Gets the value of the 'nullDouble' field.
   * @return The value of the 'nullDouble' field.
   */
  public java.lang.Double getNullDouble() {
    return nullDouble;
  }

  /**
   * Sets the value of the 'nullDouble' field.
   * @param value the value to set.
   */
  public void setNullDouble(java.lang.Double value) {
    this.nullDouble = value;
  }

  /**
   * Gets the value of the 'nullBytes' field.
   * @return The value of the 'nullBytes' field.
   */
  public java.nio.ByteBuffer getNullBytes() {
    return nullBytes;
  }

  /**
   * Sets the value of the 'nullBytes' field.
   * @param value the value to set.
   */
  public void setNullBytes(java.nio.ByteBuffer value) {
    this.nullBytes = value;
  }

  /**
   * Gets the value of the 'nullString' field.
   * @return The value of the 'nullString' field.
   */
  public java.lang.CharSequence getNullString() {
    return nullString;
  }

  /**
   * Sets the value of the 'nullString' field.
   * @param value the value to set.
   */
  public void setNullString(java.lang.CharSequence value) {
    this.nullString = value;
  }

  /**
   * Gets the value of the 'myLogicalShit' field.
   * @return The value of the 'myLogicalShit' field.
   */
  public java.nio.ByteBuffer getMyLogicalShit() {
    return myLogicalShit;
  }

  /**
   * Sets the value of the 'myLogicalShit' field.
   * @param value the value to set.
   */
  public void setMyLogicalShit(java.nio.ByteBuffer value) {
    this.myLogicalShit = value;
  }

  /**
   * Creates a new Sample RecordBuilder.
   * @return A new Sample RecordBuilder
   */
  public static com.github.avro.vanilla.model.Sample.Builder newBuilder() {
    return new com.github.avro.vanilla.model.Sample.Builder();
  }

  /**
   * Creates a new Sample RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Sample RecordBuilder
   */
  public static com.github.avro.vanilla.model.Sample.Builder newBuilder(com.github.avro.vanilla.model.Sample.Builder other) {
    return new com.github.avro.vanilla.model.Sample.Builder(other);
  }

  /**
   * Creates a new Sample RecordBuilder by copying an existing Sample instance.
   * @param other The existing instance to copy.
   * @return A new Sample RecordBuilder
   */
  public static com.github.avro.vanilla.model.Sample.Builder newBuilder(com.github.avro.vanilla.model.Sample other) {
    return new com.github.avro.vanilla.model.Sample.Builder(other);
  }

  /**
   * RecordBuilder for Sample instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Sample>
    implements org.apache.avro.data.RecordBuilder<Sample> {

    private boolean booleanValue;
    private int intValue;
    private long longValue;
    private float floatValue;
    private double doubleValue;
    private java.nio.ByteBuffer bytesValue;
    private java.lang.CharSequence stringValue;
    private java.lang.Boolean nullBoolean;
    private java.lang.Integer nullInt;
    private java.lang.Long nullLong;
    private java.lang.Float nullFloat;
    private java.lang.Double nullDouble;
    private java.nio.ByteBuffer nullBytes;
    private java.lang.CharSequence nullString;
    private java.nio.ByteBuffer myLogicalShit;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.github.avro.vanilla.model.Sample.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.booleanValue)) {
        this.booleanValue = data().deepCopy(fields()[0].schema(), other.booleanValue);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.intValue)) {
        this.intValue = data().deepCopy(fields()[1].schema(), other.intValue);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.longValue)) {
        this.longValue = data().deepCopy(fields()[2].schema(), other.longValue);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.floatValue)) {
        this.floatValue = data().deepCopy(fields()[3].schema(), other.floatValue);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.doubleValue)) {
        this.doubleValue = data().deepCopy(fields()[4].schema(), other.doubleValue);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.bytesValue)) {
        this.bytesValue = data().deepCopy(fields()[5].schema(), other.bytesValue);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.stringValue)) {
        this.stringValue = data().deepCopy(fields()[6].schema(), other.stringValue);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.nullBoolean)) {
        this.nullBoolean = data().deepCopy(fields()[7].schema(), other.nullBoolean);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.nullInt)) {
        this.nullInt = data().deepCopy(fields()[8].schema(), other.nullInt);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.nullLong)) {
        this.nullLong = data().deepCopy(fields()[9].schema(), other.nullLong);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.nullFloat)) {
        this.nullFloat = data().deepCopy(fields()[10].schema(), other.nullFloat);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.nullDouble)) {
        this.nullDouble = data().deepCopy(fields()[11].schema(), other.nullDouble);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.nullBytes)) {
        this.nullBytes = data().deepCopy(fields()[12].schema(), other.nullBytes);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.nullString)) {
        this.nullString = data().deepCopy(fields()[13].schema(), other.nullString);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.myLogicalShit)) {
        this.myLogicalShit = data().deepCopy(fields()[14].schema(), other.myLogicalShit);
        fieldSetFlags()[14] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Sample instance
     * @param other The existing instance to copy.
     */
    private Builder(com.github.avro.vanilla.model.Sample other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.booleanValue)) {
        this.booleanValue = data().deepCopy(fields()[0].schema(), other.booleanValue);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.intValue)) {
        this.intValue = data().deepCopy(fields()[1].schema(), other.intValue);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.longValue)) {
        this.longValue = data().deepCopy(fields()[2].schema(), other.longValue);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.floatValue)) {
        this.floatValue = data().deepCopy(fields()[3].schema(), other.floatValue);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.doubleValue)) {
        this.doubleValue = data().deepCopy(fields()[4].schema(), other.doubleValue);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.bytesValue)) {
        this.bytesValue = data().deepCopy(fields()[5].schema(), other.bytesValue);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.stringValue)) {
        this.stringValue = data().deepCopy(fields()[6].schema(), other.stringValue);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.nullBoolean)) {
        this.nullBoolean = data().deepCopy(fields()[7].schema(), other.nullBoolean);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.nullInt)) {
        this.nullInt = data().deepCopy(fields()[8].schema(), other.nullInt);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.nullLong)) {
        this.nullLong = data().deepCopy(fields()[9].schema(), other.nullLong);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.nullFloat)) {
        this.nullFloat = data().deepCopy(fields()[10].schema(), other.nullFloat);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.nullDouble)) {
        this.nullDouble = data().deepCopy(fields()[11].schema(), other.nullDouble);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.nullBytes)) {
        this.nullBytes = data().deepCopy(fields()[12].schema(), other.nullBytes);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.nullString)) {
        this.nullString = data().deepCopy(fields()[13].schema(), other.nullString);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.myLogicalShit)) {
        this.myLogicalShit = data().deepCopy(fields()[14].schema(), other.myLogicalShit);
        fieldSetFlags()[14] = true;
      }
    }

    /**
      * Gets the value of the 'booleanValue' field.
      * @return The value.
      */
    public java.lang.Boolean getBooleanValue() {
      return booleanValue;
    }

    /**
      * Sets the value of the 'booleanValue' field.
      * @param value The value of 'booleanValue'.
      * @return This builder.
      */
    public com.github.avro.vanilla.model.Sample.Builder setBooleanValue(boolean value) {
      validate(fields()[0], value);
      this.booleanValue = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'booleanValue' field has been set.
      * @return True if the 'booleanValue' field has been set, false otherwise.
      */
    public boolean hasBooleanValue() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'booleanValue' field.
      * @return This builder.
      */
    public com.github.avro.vanilla.model.Sample.Builder clearBooleanValue() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'intValue' field.
      * @return The value.
      */
    public java.lang.Integer getIntValue() {
      return intValue;
    }

    /**
      * Sets the value of the 'intValue' field.
      * @param value The value of 'intValue'.
      * @return This builder.
      */
    public com.github.avro.vanilla.model.Sample.Builder setIntValue(int value) {
      validate(fields()[1], value);
      this.intValue = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'intValue' field has been set.
      * @return True if the 'intValue' field has been set, false otherwise.
      */
    public boolean hasIntValue() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'intValue' field.
      * @return This builder.
      */
    public com.github.avro.vanilla.model.Sample.Builder clearIntValue() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'longValue' field.
      * @return The value.
      */
    public java.lang.Long getLongValue() {
      return longValue;
    }

    /**
      * Sets the value of the 'longValue' field.
      * @param value The value of 'longValue'.
      * @return This builder.
      */
    public com.github.avro.vanilla.model.Sample.Builder setLongValue(long value) {
      validate(fields()[2], value);
      this.longValue = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'longValue' field has been set.
      * @return True if the 'longValue' field has been set, false otherwise.
      */
    public boolean hasLongValue() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'longValue' field.
      * @return This builder.
      */
    public com.github.avro.vanilla.model.Sample.Builder clearLongValue() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'floatValue' field.
      * @return The value.
      */
    public java.lang.Float getFloatValue() {
      return floatValue;
    }

    /**
      * Sets the value of the 'floatValue' field.
      * @param value The value of 'floatValue'.
      * @return This builder.
      */
    public com.github.avro.vanilla.model.Sample.Builder setFloatValue(float value) {
      validate(fields()[3], value);
      this.floatValue = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'floatValue' field has been set.
      * @return True if the 'floatValue' field has been set, false otherwise.
      */
    public boolean hasFloatValue() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'floatValue' field.
      * @return This builder.
      */
    public com.github.avro.vanilla.model.Sample.Builder clearFloatValue() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'doubleValue' field.
      * @return The value.
      */
    public java.lang.Double getDoubleValue() {
      return doubleValue;
    }

    /**
      * Sets the value of the 'doubleValue' field.
      * @param value The value of 'doubleValue'.
      * @return This builder.
      */
    public com.github.avro.vanilla.model.Sample.Builder setDoubleValue(double value) {
      validate(fields()[4], value);
      this.doubleValue = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'doubleValue' field has been set.
      * @return True if the 'doubleValue' field has been set, false otherwise.
      */
    public boolean hasDoubleValue() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'doubleValue' field.
      * @return This builder.
      */
    public com.github.avro.vanilla.model.Sample.Builder clearDoubleValue() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'bytesValue' field.
      * @return The value.
      */
    public java.nio.ByteBuffer getBytesValue() {
      return bytesValue;
    }

    /**
      * Sets the value of the 'bytesValue' field.
      * @param value The value of 'bytesValue'.
      * @return This builder.
      */
    public com.github.avro.vanilla.model.Sample.Builder setBytesValue(java.nio.ByteBuffer value) {
      validate(fields()[5], value);
      this.bytesValue = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'bytesValue' field has been set.
      * @return True if the 'bytesValue' field has been set, false otherwise.
      */
    public boolean hasBytesValue() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'bytesValue' field.
      * @return This builder.
      */
    public com.github.avro.vanilla.model.Sample.Builder clearBytesValue() {
      bytesValue = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'stringValue' field.
      * @return The value.
      */
    public java.lang.CharSequence getStringValue() {
      return stringValue;
    }

    /**
      * Sets the value of the 'stringValue' field.
      * @param value The value of 'stringValue'.
      * @return This builder.
      */
    public com.github.avro.vanilla.model.Sample.Builder setStringValue(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.stringValue = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'stringValue' field has been set.
      * @return True if the 'stringValue' field has been set, false otherwise.
      */
    public boolean hasStringValue() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'stringValue' field.
      * @return This builder.
      */
    public com.github.avro.vanilla.model.Sample.Builder clearStringValue() {
      stringValue = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'nullBoolean' field.
      * @return The value.
      */
    public java.lang.Boolean getNullBoolean() {
      return nullBoolean;
    }

    /**
      * Sets the value of the 'nullBoolean' field.
      * @param value The value of 'nullBoolean'.
      * @return This builder.
      */
    public com.github.avro.vanilla.model.Sample.Builder setNullBoolean(java.lang.Boolean value) {
      validate(fields()[7], value);
      this.nullBoolean = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'nullBoolean' field has been set.
      * @return True if the 'nullBoolean' field has been set, false otherwise.
      */
    public boolean hasNullBoolean() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'nullBoolean' field.
      * @return This builder.
      */
    public com.github.avro.vanilla.model.Sample.Builder clearNullBoolean() {
      nullBoolean = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'nullInt' field.
      * @return The value.
      */
    public java.lang.Integer getNullInt() {
      return nullInt;
    }

    /**
      * Sets the value of the 'nullInt' field.
      * @param value The value of 'nullInt'.
      * @return This builder.
      */
    public com.github.avro.vanilla.model.Sample.Builder setNullInt(java.lang.Integer value) {
      validate(fields()[8], value);
      this.nullInt = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'nullInt' field has been set.
      * @return True if the 'nullInt' field has been set, false otherwise.
      */
    public boolean hasNullInt() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'nullInt' field.
      * @return This builder.
      */
    public com.github.avro.vanilla.model.Sample.Builder clearNullInt() {
      nullInt = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'nullLong' field.
      * @return The value.
      */
    public java.lang.Long getNullLong() {
      return nullLong;
    }

    /**
      * Sets the value of the 'nullLong' field.
      * @param value The value of 'nullLong'.
      * @return This builder.
      */
    public com.github.avro.vanilla.model.Sample.Builder setNullLong(java.lang.Long value) {
      validate(fields()[9], value);
      this.nullLong = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'nullLong' field has been set.
      * @return True if the 'nullLong' field has been set, false otherwise.
      */
    public boolean hasNullLong() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'nullLong' field.
      * @return This builder.
      */
    public com.github.avro.vanilla.model.Sample.Builder clearNullLong() {
      nullLong = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'nullFloat' field.
      * @return The value.
      */
    public java.lang.Float getNullFloat() {
      return nullFloat;
    }

    /**
      * Sets the value of the 'nullFloat' field.
      * @param value The value of 'nullFloat'.
      * @return This builder.
      */
    public com.github.avro.vanilla.model.Sample.Builder setNullFloat(java.lang.Float value) {
      validate(fields()[10], value);
      this.nullFloat = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'nullFloat' field has been set.
      * @return True if the 'nullFloat' field has been set, false otherwise.
      */
    public boolean hasNullFloat() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'nullFloat' field.
      * @return This builder.
      */
    public com.github.avro.vanilla.model.Sample.Builder clearNullFloat() {
      nullFloat = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'nullDouble' field.
      * @return The value.
      */
    public java.lang.Double getNullDouble() {
      return nullDouble;
    }

    /**
      * Sets the value of the 'nullDouble' field.
      * @param value The value of 'nullDouble'.
      * @return This builder.
      */
    public com.github.avro.vanilla.model.Sample.Builder setNullDouble(java.lang.Double value) {
      validate(fields()[11], value);
      this.nullDouble = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'nullDouble' field has been set.
      * @return True if the 'nullDouble' field has been set, false otherwise.
      */
    public boolean hasNullDouble() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'nullDouble' field.
      * @return This builder.
      */
    public com.github.avro.vanilla.model.Sample.Builder clearNullDouble() {
      nullDouble = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'nullBytes' field.
      * @return The value.
      */
    public java.nio.ByteBuffer getNullBytes() {
      return nullBytes;
    }

    /**
      * Sets the value of the 'nullBytes' field.
      * @param value The value of 'nullBytes'.
      * @return This builder.
      */
    public com.github.avro.vanilla.model.Sample.Builder setNullBytes(java.nio.ByteBuffer value) {
      validate(fields()[12], value);
      this.nullBytes = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'nullBytes' field has been set.
      * @return True if the 'nullBytes' field has been set, false otherwise.
      */
    public boolean hasNullBytes() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'nullBytes' field.
      * @return This builder.
      */
    public com.github.avro.vanilla.model.Sample.Builder clearNullBytes() {
      nullBytes = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'nullString' field.
      * @return The value.
      */
    public java.lang.CharSequence getNullString() {
      return nullString;
    }

    /**
      * Sets the value of the 'nullString' field.
      * @param value The value of 'nullString'.
      * @return This builder.
      */
    public com.github.avro.vanilla.model.Sample.Builder setNullString(java.lang.CharSequence value) {
      validate(fields()[13], value);
      this.nullString = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'nullString' field has been set.
      * @return True if the 'nullString' field has been set, false otherwise.
      */
    public boolean hasNullString() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'nullString' field.
      * @return This builder.
      */
    public com.github.avro.vanilla.model.Sample.Builder clearNullString() {
      nullString = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'myLogicalShit' field.
      * @return The value.
      */
    public java.nio.ByteBuffer getMyLogicalShit() {
      return myLogicalShit;
    }

    /**
      * Sets the value of the 'myLogicalShit' field.
      * @param value The value of 'myLogicalShit'.
      * @return This builder.
      */
    public com.github.avro.vanilla.model.Sample.Builder setMyLogicalShit(java.nio.ByteBuffer value) {
      validate(fields()[14], value);
      this.myLogicalShit = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'myLogicalShit' field has been set.
      * @return True if the 'myLogicalShit' field has been set, false otherwise.
      */
    public boolean hasMyLogicalShit() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'myLogicalShit' field.
      * @return This builder.
      */
    public com.github.avro.vanilla.model.Sample.Builder clearMyLogicalShit() {
      myLogicalShit = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Sample build() {
      try {
        Sample record = new Sample();
        record.booleanValue = fieldSetFlags()[0] ? this.booleanValue : (java.lang.Boolean) defaultValue(fields()[0]);
        record.intValue = fieldSetFlags()[1] ? this.intValue : (java.lang.Integer) defaultValue(fields()[1]);
        record.longValue = fieldSetFlags()[2] ? this.longValue : (java.lang.Long) defaultValue(fields()[2]);
        record.floatValue = fieldSetFlags()[3] ? this.floatValue : (java.lang.Float) defaultValue(fields()[3]);
        record.doubleValue = fieldSetFlags()[4] ? this.doubleValue : (java.lang.Double) defaultValue(fields()[4]);
        record.bytesValue = fieldSetFlags()[5] ? this.bytesValue : (java.nio.ByteBuffer) defaultValue(fields()[5]);
        record.stringValue = fieldSetFlags()[6] ? this.stringValue : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.nullBoolean = fieldSetFlags()[7] ? this.nullBoolean : (java.lang.Boolean) defaultValue(fields()[7]);
        record.nullInt = fieldSetFlags()[8] ? this.nullInt : (java.lang.Integer) defaultValue(fields()[8]);
        record.nullLong = fieldSetFlags()[9] ? this.nullLong : (java.lang.Long) defaultValue(fields()[9]);
        record.nullFloat = fieldSetFlags()[10] ? this.nullFloat : (java.lang.Float) defaultValue(fields()[10]);
        record.nullDouble = fieldSetFlags()[11] ? this.nullDouble : (java.lang.Double) defaultValue(fields()[11]);
        record.nullBytes = fieldSetFlags()[12] ? this.nullBytes : (java.nio.ByteBuffer) defaultValue(fields()[12]);
        record.nullString = fieldSetFlags()[13] ? this.nullString : (java.lang.CharSequence) defaultValue(fields()[13]);
        record.myLogicalShit = fieldSetFlags()[14] ? this.myLogicalShit : (java.nio.ByteBuffer) defaultValue(fields()[14]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Sample>
    WRITER$ = (org.apache.avro.io.DatumWriter<Sample>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Sample>
    READER$ = (org.apache.avro.io.DatumReader<Sample>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
